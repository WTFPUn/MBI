from tkinter import * 
from tkinter.tix import *
import numpy as np
from PIL import Image,ImageTk
from docx2python import docx2python 



root = Tk()
root.geometry("1200x600")
root.title("Make by Ingredients")
root.option_add("*font","helevitica 24")
root.resizable(0,0)


swin = ScrolledWindow(root, width=1200, height=500)
swin.grid(column = 0,columnspan = 2 , row = 0)
win = swin.window



Label(win,text = " ").pack()
Label(win,text = " ").pack()
Label(win,text = "‡∏ú‡∏±‡∏Å ü•¶",fg = "green").pack()
Label(win,text = " ").pack()

swinveg = ScrolledWindow(win, width=1000, height=300)
swinveg.pack()
winveg = swinveg.window




Label(win,text = " ").pack()
Label(win,text = " ").pack()    
Label(win,text = "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ú‡πá‡∏î üå∂",fg = "red").pack()
Label(win,text = " ").pack()

swinpep = ScrolledWindow(win, width=1000, height=300)
swinpep.pack()
winpep = swinpep.window




Label(win,text = " ").pack()
Label(win,text = " ").pack()
Label(win,text = "‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏™‡∏±‡∏ï‡∏ß‡πå ü•©",fg = "red").pack()
Label(win,text = " ").pack()

swinmeat = ScrolledWindow(win, width=1000, height=300)
swinmeat.pack()
winmeat = swinmeat.window




Label(win,text = " ").pack()
Label(win,text = " ").pack()
Label(win,text = "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏∞‡πÄ‡∏• üå¥",fg = "blue").pack()
Label(win,text = " ").pack()

swinsea = ScrolledWindow(win, width=1000, height=300)
swinsea.pack()
winsea = swinsea.window




Label(win,text = " ").pack()
Label(win,text = " ").pack()
Label(win,text = "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∏‡∏á üç¶",fg = "black").pack()
Label(win,text = " ").pack()

swingar = ScrolledWindow(win, width=1000, height=300)
swingar.pack()
wingar = swingar.window




Label(win,text = " ").pack()
Label(win,text = " ").pack()
Label(win,text = "‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ üçΩ",fg = "black").pack()
Label(win,text = " ").pack()

swinnm = ScrolledWindow(win, width=1000, height=300)
swinnm.pack()
winnm = swinnm.window







veg = np.array(['‡πÉ‡∏ö‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤','‡∏ñ‡∏±‡πà‡∏ß‡∏ù‡∏±‡∏Å‡∏¢‡∏≤‡∏ß','‡πÅ‡∏ï‡∏á‡∏Å‡∏ß‡∏≤','‡∏ï‡πâ‡∏ô‡∏´‡∏≠‡∏°','‡πÉ‡∏ö‡πÇ‡∏´‡∏£‡∏∞‡∏û‡∏≤','‡∏°‡∏∞‡πÄ‡∏Ç‡∏∑‡∏≠‡πÄ‡∏ó‡∏®','‡πÉ‡∏ö‡∏°‡∏∞‡∏Å‡∏£‡∏π‡∏î','‡∏ï‡∏∞‡πÑ‡∏Ñ‡∏£‡πâ','‡∏Ç‡πà‡∏≤','‡πÅ‡∏Ñ‡∏£‡∏≠‡∏ó','‡∏Ñ‡∏∞‡∏ô‡πâ‡∏≤','‡∏Ç‡∏∂‡πâ‡∏ô‡∏â‡πà‡∏≤‡∏¢','‡∏ú‡∏±‡∏Å‡∏Å‡∏≤‡∏î‡∏´‡∏≠‡∏°'])  #13
veg2 = np.array(['‡∏ú‡∏±‡∏Å‡∏ö‡∏∏‡πâ‡∏á','‡∏ú‡∏±‡∏Å‡∏Å‡∏≤‡∏î‡∏Ç‡∏≤‡∏ß','‡∏ú‡∏±‡∏Å‡∏ä‡∏µ‡∏ù‡∏£‡∏±‡πà‡∏á','‡∏ú‡∏±‡∏Å‡∏Å‡∏£‡∏∞‡πÄ‡∏â‡∏î','‡πÄ‡∏´‡πá‡∏î‡∏´‡∏π‡∏´‡∏ô‡∏π','‡∏°‡∏∞‡∏£‡∏∞','‡πÄ‡∏´‡πá‡∏î‡∏´‡∏≠‡∏°','‡∏Ç‡∏¥‡∏á‡∏≠‡πà‡∏≠‡∏ô','‡∏™‡∏∞‡∏£‡∏∞‡πÅ‡∏´‡∏ô‡πà','‡πÄ‡∏´‡πá‡∏î‡∏ü‡∏≤‡∏á','‡πÄ‡∏´‡πá‡∏î‡πÄ‡∏Ç‡πá‡∏°‡∏ó‡∏≠‡∏á','‡∏ö‡∏•‡πá‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏•‡∏µ‡πà','‡∏û‡∏£‡∏¥‡∏Å‡∏´‡∏¢‡∏ß‡∏Å','‡πÄ‡∏´‡πá‡∏î‡∏´‡∏¥‡∏°‡∏∞'])    #14
pep = np.array(['‡∏û‡∏£‡∏¥‡∏Å‡∏Ç‡∏µ‡πâ‡∏´‡∏ô‡∏π','‡∏û‡∏£‡∏¥‡∏Å‡πÑ‡∏ó‡∏¢‡πÄ‡∏°‡πá‡∏î','‡∏ô‡πâ‡∏≥‡∏û‡∏£‡∏¥‡∏Å','‡∏û‡∏£‡∏¥‡∏Å‡πÑ‡∏ó‡∏¢‡∏õ‡πà‡∏ô','‡∏û‡∏£‡∏¥‡∏Å‡∏ä‡∏µ‡πâ‡∏ü‡πâ‡∏≤']) #5
meat = np.array(["‡∏Å‡∏∏‡∏ô‡πÄ‡∏ä‡∏µ‡∏¢‡∏á","‡πÅ‡∏´‡∏ô‡∏°","‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏°‡∏π","‡∏´‡∏°‡∏π‡∏¢‡∏≠","‡πÑ‡∏™‡πâ‡∏Å‡∏£‡∏≠‡∏Å","‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏ß‡∏±‡∏ß","‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÑ‡∏Å‡πà","‡∏õ‡∏µ‡∏Å‡πÑ‡∏Å‡πà","‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏õ‡∏•‡∏≤‡∏Å‡∏£‡∏≤‡∏¢","‡∏°‡∏±‡∏ô‡∏´‡∏°‡∏π","‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö"])   #11
sea = np.array(["‡∏Å‡∏∏‡πâ‡∏á","‡∏õ‡∏•‡∏≤‡∏´‡∏°‡∏∂‡∏Å","‡∏õ‡∏•‡∏≤‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á","‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏õ‡∏•‡∏≤","‡∏õ‡∏π‡∏≠‡∏±‡∏î","‡∏õ‡∏•‡∏≤‡∏ó‡∏π"])   #6
gar = np.array(["‡πÄ‡∏Å‡∏•‡∏∑‡∏≠","‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°","‡∏ô‡πâ‡∏≥‡∏õ‡∏•‡∏≤","‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏ó‡∏£‡∏≤‡∏¢","‡∏ã‡∏≠‡∏™‡∏´‡∏≠‡∏¢‡∏ô‡∏≤‡∏á‡∏£‡∏°","‡∏ã‡∏µ‡∏≠‡∏¥‡πä‡∏ß‡∏Ç‡∏≤‡∏ß","‡∏ú‡∏á‡∏ä‡∏π‡∏£‡∏™","‡∏´‡∏≠‡∏°‡πÉ‡∏´‡∏ç‡πà","‡∏ô‡πâ‡∏≥‡∏™‡πâ‡∏°‡∏™‡∏≤‡∏¢‡∏ä‡∏π","‡πÄ‡∏ï‡πâ‡∏≤‡∏´‡∏π‡πâ‡∏¢‡∏µ‡πâ"])  #10
gar2 = np.array(["‡∏°‡∏∞‡∏ô‡∏≤‡∏ß","‡∏ã‡∏∏‡∏õ‡∏Å‡πâ‡∏≠‡∏ô","‡∏´‡∏≠‡∏°‡πÅ‡∏î‡∏á","‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°‡πÄ‡∏à‡∏µ‡∏¢‡∏ß","‡∏ã‡∏µ‡∏≠‡∏¥‡πä‡∏ß‡∏î‡∏≥","‡∏£‡∏≤‡∏Å‡∏ú‡∏±‡∏Å‡∏ä‡∏µ","‡∏ô‡πâ‡∏≥‡∏°‡∏∞‡∏ô‡∏≤‡∏ß","‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏õ‡∏¥‡πä‡∏ö","‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏ó‡∏£‡∏≤‡∏¢"])  #9
nm = np.array(["‡∏ß‡∏∏‡πâ‡∏ô‡πÄ‡∏™‡πâ‡∏ô","‡πÑ‡∏Ç‡πà‡πÑ‡∏Å‡πà","‡πÑ‡∏Ç‡πà‡πÄ‡∏õ‡πá‡∏î","‡πÄ‡∏ô‡∏¢‡∏™‡∏î","‡∏Ç‡∏ô‡∏°‡∏à‡∏µ‡∏ô","‡∏°‡∏≤‡∏°‡πà‡∏≤","‡πÄ‡∏ï‡πâ‡∏≤‡∏´‡∏π‡πâ‡πÑ‡∏Ç‡πà","‡πÄ‡∏Å‡∏•‡πá‡∏î‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á","‡πÅ‡∏õ‡πâ‡∏á‡∏Ç‡πâ‡∏≤‡∏ß‡πÇ‡∏û‡∏î","‡πÅ‡∏õ‡πâ‡∏á‡∏™‡∏≤‡∏•‡∏µ"])    #10
together = np.array([veg,veg2,pep,meat,sea,gar,gar2,nm])



vegch = [BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False)]
vegch2 = [BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False) ]
pepch = [BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False)]
meatch = [BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False)]
seach = [BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False)]
garch = [BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False)]
garch2 = [BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False)]
nmch =  [BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False),BooleanVar(value = False)]




cb = []
row = 2
column = 0
for i in range(len(veg)) :
    vegin = Checkbutton(winveg,text = veg[i],variable = vegch[i],width = 10 , height = 3)
    vegin.grid(row = row,column = column)
    cb.append(vegin)
    if column == 3 :
        column = -1
        row = row + 1
    column = column + 1

for i in range(len(veg2)) :
    vegin = Checkbutton(winveg,text = veg2[i],variable = vegch2[i],width = 10 , height = 3)
    vegin.grid(row = row,column = column)
    cb.append(vegin)
    if column == 3 :
        column = -1
        row = row + 1
    column = column + 1




row = 2
column = 0
for i in range(len(pep)) :
    pepin = Checkbutton(winpep,text = pep[i],variable = pepch[i],width = 10 , height = 3)
    pepin.grid(row = row,column = column)
    cb.append(pepin)
    if column == 3 :
        column = -1
        row = row + 1
    column = column + 1






row = 2
column = 0
for i in range(len(meat)) :
    meatin = Checkbutton(winmeat,text = meat[i],variable = meatch[i],width = 10 , height = 3)
    meatin.grid(row = row,column = column)
    cb.append(meatin)
    if column == 3 :
        column = -1
        row = row + 1
    column = column + 1






row = 2
column = 0
for i in range(len(sea)) :
    seain = Checkbutton(winsea,text = sea[i],variable = seach[i],width = 10 , height = 3)
    seain.grid(row = row,column = column)
    cb.append(seain)
    if column == 3 :
        column = -1
        row = row + 1
    column = column + 1






row = 2
column = 0
for i in range(len(gar)) :
    if(i != 3)  :
        garin = Checkbutton(wingar,text = gar[i],variable = garch[i],width = 10 , height = 3)
        garin.grid(row = row,column = column)
        cb.append(garin)
        if column == 3 :
            column = -1
            row = row + 1
        column = column + 1

for i in range(len(gar2)) :
    garin = Checkbutton(wingar,text = gar2[i],variable = garch2[i],width = 10 , height = 3)
    garin.grid(row = row,column = column)
    cb.append(garin)
    if column == 3 :
        column = -1
        row = row + 1
    column = column + 1





row = 2
column = 0
for i in range(len(nm)) :
    nmin = Checkbutton(winnm,text = nm[i],variable = nmch[i],width = 10 , height = 3)
    nmin.grid(row = row,column = column)
    cb.append(nmin)
    if column == 3 :
        column = -1
        row = row + 1
    column = column + 1



rww = 1
cll = 1


def search() :
    root2 = Toplevel()
    root2.geometry("1600x800")
    root2.title("Make by Ingredients")
    root2.option_add("*font","helevitica 24")
    root2.resizable(0,0)
    root2.grab_set()
    swin2 = ScrolledWindow(root2, width=1600, height=800)
    swin2.pack()
    win2 = swin2.window   
    def scb(name,row,col) :
        swinmenu = ScrolledWindow(win2, width=600, height=750)
        swinmenu.grid(row = row,column = col,padx = 70,pady = 100)
        winmenu = swinmenu.window
        Label(winmenu,text = " ").pack()
        Label(winmenu,text = name).pack()
        Label(winmenu,text = " ").pack()
        load = Image.open(name + ".jpg").resize((400,400))
        render = ImageTk.PhotoImage(load)
        photo = Label(winmenu,image = render)
        photo.image = render
        photo.pack()

        
        def detail() :
            root3 = Toplevel()
            root3.geometry("800x1000")
            root3.title(name)
            root3.option_add("*font","helevitica 24")
            root3.resizable(0,0)
            root3.grab_set()
            swin3 = ScrolledWindow(root3, width=800, height=1000)
            swin3.pack()
            win3 = swin3.window 

            Label(win3,text = " ").pack()
            Label(win3,text = name).pack()
            Label(win3,text = " ").pack()
            photo = Label(win3,image = render)
            photo.image = render
            photo.pack()
            Label(win3,text = " ").pack()

            
            def displaymethod(name) :
                cat=[]
                dog=[]
                mix=[cat,dog]
                buf=0
                method = docx2python(name+".docx")
                for i in method.body[0][0][0]   :
                    if i == "    ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏≥" :
                        buf=buf+1
                    mix[buf].append(i)
                for i in range(len(cat)) :
                    if ("‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏™‡∏°" in cat[i]) or ("‡πÉ‡∏ö‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤" in cat[i] and vegch[0].get() == True) or ("‡∏ñ‡∏±‡πà‡∏ß‡∏ù‡∏±‡∏Å‡∏¢‡∏≤‡∏ß" in cat[i] and vegch[1].get() == True) or ("‡πÅ‡∏ï‡∏á‡∏Å‡∏ß‡∏≤" in cat[i] and vegch[2].get() == True) or ("‡∏ï‡πâ‡∏ô‡∏´‡∏≠‡∏°" in cat[i] and vegch[3].get() == True) or ("‡πÉ‡∏ö‡πÇ‡∏´‡∏£‡∏∞‡∏û‡∏≤" in cat[i] and vegch[4].get() == True) or ("‡∏°‡∏∞‡πÄ‡∏Ç‡∏∑‡∏≠‡πÄ‡∏ó‡∏®" in cat[i] and vegch[5].get() == True)  or ("‡πÉ‡∏ö‡∏°‡∏∞‡∏Å‡∏£‡∏π‡∏î" in cat[i] and vegch[6].get() == True)   or ("‡∏ï‡∏∞‡πÑ‡∏Ñ‡∏£‡πâ" in cat[i] and vegch[7].get() == True)  or ("‡∏Ç‡πà‡∏≤" in cat[i] and vegch[8].get() == True)   or ("‡πÅ‡∏Ñ‡∏£‡∏≠‡∏ó" in cat[i] and vegch[9].get() == True)   or ("‡∏Ñ‡∏∞‡∏ô‡πâ‡∏≤" in cat[i] and vegch[10].get() == True)    or ("‡∏Ç‡∏∂‡πâ‡∏ô‡∏â‡πà‡∏≤‡∏¢" in cat[i] and vegch[11].get() == True)  or ("‡∏ú‡∏±‡∏Å‡∏Å‡∏≤‡∏î‡∏´‡∏≠‡∏°" in cat[i] and vegch[12].get() == True)   or ("‡∏ú‡∏±‡∏Å‡∏ö‡∏∏‡πâ‡∏á" in cat[i] and vegch2[0].get() == True)  or ("‡∏ú‡∏±‡∏Å‡∏Å‡∏≤‡∏î‡∏Ç‡∏≤‡∏ß" in cat[i] and vegch2[1].get() == True)  or ("‡∏ú‡∏±‡∏Å‡∏ä‡∏µ‡∏ù‡∏£‡∏±‡πà‡∏á" in cat[i] and vegch2[2].get() == True)  or ("‡∏ú‡∏±‡∏Å‡∏Å‡∏£‡∏∞‡πÄ‡∏â‡∏î" in cat[i] and vegch2[3].get() == True)  or ("‡πÄ‡∏´‡πá‡∏î‡∏´‡∏π‡∏´‡∏ô‡∏π" in cat[i] and vegch2[4].get() == True)  or ("‡∏°‡∏∞‡∏£‡∏∞" in cat[i] and vegch2[5].get() == True)  or ("‡πÄ‡∏´‡πá‡∏î‡∏´‡∏≠‡∏°" in cat[i] and vegch2[6].get() == True)  or ("‡∏Ç‡∏¥‡∏á‡∏≠‡πà‡∏≠‡∏ô" in cat[i] and vegch2[7].get() == True)  or ("‡∏™‡∏≤‡∏£‡∏∞‡πÅ‡∏´‡∏ô‡πà" in cat[i] and vegch2[8].get() == True) or ("‡πÄ‡∏´‡πá‡∏î‡∏ü‡∏≤‡∏á" in cat[i] and vegch2[9].get() == True) or ("‡πÄ‡∏´‡πá‡∏î‡πÄ‡∏Ç‡πá‡∏°‡∏ó‡∏≠‡∏á" in cat[i] and vegch2[10].get() == True) or ("‡∏ö‡∏•‡πá‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏•‡∏µ‡πà" in cat[i] and vegch2[11].get() == True)  or ("‡∏û‡∏£‡∏¥‡∏Å‡∏´‡∏¢‡∏ß‡∏Å" in cat[i] and vegch2[12].get() == True)   or ("‡πÄ‡∏´‡πá‡∏î‡∏´‡∏¥‡∏°‡∏∞" in cat[i] and vegch2[13].get() == True)  or ("‡∏û‡∏£‡∏¥‡∏Å‡∏Ç‡∏µ‡πâ‡∏´‡∏ô‡∏π" in cat[i] and pepch[0].get() == True) or ("‡∏û‡∏£‡∏¥‡∏Å‡πÑ‡∏ó‡∏¢" in cat[i] and pepch[1].get() == True)  or ("‡∏ô‡πâ‡∏≥‡∏û‡∏£‡∏¥‡∏Å" in cat[i] and pepch[2].get() == True)  or ("‡∏û‡∏£‡∏¥‡∏Å‡πÑ‡∏ó‡∏¢" in cat[i] and pepch[3].get() == True) or ("‡∏û‡∏£‡∏¥‡∏Å‡∏ä‡∏µ‡πâ‡∏ü‡πâ‡∏≤" in cat[i] and pepch[4].get() == True)   or ("‡∏Å‡∏∏‡∏ô‡πÄ‡∏ä‡∏µ‡∏¢‡∏á" in cat[i] and meatch[0].get() == True)  or ("‡πÅ‡∏´‡∏ô‡∏°" in cat[i] and meatch[1].get() == True) or ("‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏°‡∏π" in cat[i] and meatch[2].get() == True)  or ("‡∏´‡∏°‡∏π‡∏¢‡∏≠" in cat[i] and meatch[3].get() == True)  or ("‡πÑ‡∏™‡πâ‡∏Å‡∏£‡∏≠‡∏Å" in cat[i] and meatch[4].get() == True)  or ("‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏ß‡∏±‡∏ß" in cat[i] and meatch[5].get() == True)  or ("‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÑ‡∏Å‡πà" in cat[i] and meatch[6].get() == True)  or ("‡∏õ‡∏µ‡∏Å‡πÑ‡∏Å‡πà" in cat[i] and meatch[7].get() == True) or ("‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏õ‡∏•‡∏≤‡∏Å‡∏£‡∏≤‡∏¢" in cat[i] and meatch[8].get() == True)  or ("‡∏°‡∏±‡∏ô‡∏´‡∏°‡∏π" in cat[i] and meatch[9].get() == True)  or ("‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö" in cat[i] and meatch[10].get() == True)  or ("‡∏Å‡∏∏‡πâ‡∏á" in cat[i] and seach[0].get() == True)  or ("‡∏õ‡∏•‡∏≤‡∏´‡∏°‡∏∂‡∏Å" in cat[i] and seach[1].get() == True)  or ("‡∏õ‡∏•‡∏≤‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á" in cat[i] and seach[2].get() == True)  or ("‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏õ‡∏•‡∏≤" in cat[i] and seach[3].get() == True)  or ("‡∏õ‡∏π‡∏≠‡∏±‡∏î" in cat[i] and seach[4].get() == True)  or ("‡∏õ‡∏•‡∏≤‡∏ó‡∏π" in cat[i] and seach[5].get() == True)   or ("‡πÄ‡∏Å‡∏•‡∏∑‡∏≠" in cat[i] and garch[0].get() == True)  or ("‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°" in cat[i] and garch[1].get() == True)  or ("‡∏ô‡πâ‡∏≥‡∏õ‡∏•‡∏≤" in cat[i] and garch[2].get() == True) or ("‡∏ã‡∏≠‡∏™‡∏´‡∏≠‡∏¢‡∏ô‡∏≤‡∏á‡∏£‡∏°" in cat[i] and garch[4].get() == True)  or ("‡∏ã‡∏µ‡∏≠‡∏¥‡πä‡∏ß‡∏Ç‡∏≤‡∏ß" in cat[i] and garch[5].get() == True)  or ("‡∏ú‡∏á‡∏ä‡∏π‡∏£‡∏™" in cat[i] and garch[6].get() == True)  or ("‡∏´‡∏≠‡∏°‡πÉ‡∏´‡∏ç‡πà" in cat[i] and garch[7].get() == True)  or ("‡∏ô‡πâ‡∏≥‡∏™‡πâ‡∏°‡∏™‡∏≤‡∏¢‡∏ä‡∏π" in cat[i] and garch[8].get() == True)  or ("‡πÄ‡∏ï‡πâ‡∏≤‡∏´‡∏π‡πâ‡∏¢‡∏µ‡πâ" in cat[i] and garch[9].get() == True)  or ("‡∏°‡∏∞‡∏ô‡∏≤‡∏ß" in cat[i] and garch2[0].get() == True)  or ("‡∏ã‡∏∏‡∏õ‡∏Å‡πâ‡∏≠‡∏ô" in cat[i] and garch2[1].get() == True)  or ("‡∏´‡∏≠‡∏°‡πÅ‡∏î‡∏á" in cat[i] and garch2[2].get() == True)  or ("‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°‡πÄ‡∏à‡∏µ‡∏¢‡∏ß" in cat[i] and garch2[3].get() == True)  or ("‡∏ã‡∏µ‡∏≠‡∏¥‡πä‡∏ß‡∏î‡∏≥" in cat[i] and garch2[4].get() == True)   or ("‡∏£‡∏≤‡∏Å‡∏ú‡∏±‡∏Å‡∏ä‡∏µ" in cat[i] and garch2[5].get() == True)  or ("‡∏ô‡πâ‡∏≥‡∏°‡∏∞‡∏ô‡∏≤‡∏ß" in cat[i] and garch2[6].get() == True)  or ("‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏õ‡∏¥‡πä‡∏ö" in cat[i] and garch2[7].get() == True)  or ("‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏ó‡∏£‡∏≤‡∏¢" in cat[i] and garch2[8].get() == True)  or ("‡∏ß‡∏∏‡πâ‡∏ô‡πÄ‡∏™‡πâ‡∏ô" in cat[i] and nmch[0].get() == True) or ("‡πÑ‡∏Ç‡πà‡πÑ‡∏Å‡πà" in cat[i] and nmch[1].get() == True)  or ("‡πÑ‡∏Ç‡πà‡πÄ‡∏õ‡πá‡∏î" in cat[i] and nmch[2].get() == True)  or ("‡πÄ‡∏ô‡∏¢‡∏™‡∏î" in cat[i] and nmch[3].get() == True)  or ("‡∏Ç‡∏ô‡∏°‡∏à‡∏µ‡∏ô" in cat[i] and nmch[4].get() == True)  or ("‡∏°‡∏≤‡∏°‡πà‡∏≤" in cat[i] and nmch[5].get() == True)  or ("‡πÄ‡∏ï‡πâ‡∏≤‡∏´‡∏π‡πâ‡πÑ‡∏Ç‡πà" in cat[i] and nmch[6].get() == True) or ("‡πÄ‡∏Å‡∏•‡πá‡∏î‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á" in cat[i] and nmch[7].get() == True)   or ("‡πÅ‡∏õ‡πâ‡∏á‡∏Ç‡πâ‡∏≤‡∏ß‡πÇ‡∏û‡∏î" in cat[i] and nmch[8].get() == True)  or ("‡πÅ‡∏õ‡πâ‡∏á‡∏™‡∏≤‡∏•‡∏µ" in cat[i] and nmch[9].get() == True)   :
                        Label(win3,text = cat[i],fg = "black",anchor = "w").pack(fill = BOTH)
                    else :
                        Label(win3,text = cat[i],fg = "red",anchor = "w").pack(fill = BOTH)
                for i in dog :
                    Label(win3,text = i,anchor = "w").pack(fill = BOTH)
            
            displaymethod(name)
        
    
        Label(winmenu,text = " ").pack()
        Label(winmenu,text = " ").pack()
        Button(winmenu,text = "Detail",command = detail,height = 2,width = 10).pack()

    def tab() :
        global rww
        global cll
        cll = cll + 1
        if cll == 3 :
            rww = rww + 1
            cll = 1

    
     
    if meatch[10].get() == True and nmch[6].get() == True and nmch[1].get() == True   :
        scb("‡πÅ‡∏Å‡∏á‡∏à‡∏∑‡∏î‡πÑ‡∏Ç‡πà‡∏ô‡πâ‡∏≥‡πÄ‡∏ï‡πâ‡∏≤‡∏´‡∏π‡πâ‡πÑ‡∏Ç‡πà‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö",rww,cll)
        tab()
    

          
    if meatch[10].get() == True and vegch2[9].get() == True  :
        scb("‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏ô‡πâ‡∏≥‡πÉ‡∏™‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö",rww,cll)
        tab()
    

          
    if meatch[7].get() == True and meatch[6].get() == True  :
        scb("‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡πÑ‡∏Å‡πà",rww,cll)
        tab()
    

    
    if seach[0].get() == True and pepch[2].get() == True   :
        scb("‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á‡∏ô‡πâ‡∏≥‡∏Ç‡πâ‡∏ô",rww,cll)
        tab()
    


    if seach[1].get() == True and pepch[2].get() == True   :
        scb("‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏õ‡∏•‡∏≤‡∏´‡∏°‡∏∂‡∏Å‡∏ô‡πâ‡∏≥‡∏Ç‡πâ‡∏ô",rww,cll)
        tab()
    

    
    if seach[0].get() == True and  seach[1].get() == True and pepch[2].get() == True :
        scb("‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏£‡∏ß‡∏°‡∏°‡∏¥‡∏ï‡∏£‡∏ó‡∏∞‡πÄ‡∏•",rww,cll)
        tab()
    

    
    if meatch[10].get() == True and nmch[6].get() == True   :
        scb("‡πÅ‡∏Å‡∏á‡∏à‡∏∑‡∏î‡πÄ‡∏ï‡πâ‡∏≤‡∏´‡∏π‡πâ‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö",rww,cll)
        tab()
    

    
    if meatch[10].get() == True and vegch2[1].get() == True and nmch[6].get() == True :
        scb("‡πÅ‡∏Å‡∏á‡∏à‡∏∑‡∏î‡πÄ‡∏ï‡πâ‡∏≤‡∏´‡∏π‡πâ‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö‡∏ú‡∏±‡∏Å‡∏Å‡∏≤‡∏î‡∏Ç‡∏≤‡∏ß",rww,cll)
        tab()
    

    
    if meatch[10].get() == True and nmch[6].get() == True   :
        scb("‡πÅ‡∏Å‡∏á‡∏à‡∏∑‡∏î‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö‡πÄ‡∏ï‡πâ‡∏≤‡∏´‡∏π‡πâ‡∏™‡∏≤‡∏´‡∏£‡πà‡∏≤‡∏¢",rww,cll)
        tab()
    

    
    if meatch[10].get() == True and nmch[0].get() == True   :
        scb("‡∏¢‡∏≥‡∏ß‡∏∏‡πâ‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö",rww,cll)
        tab()
    

    
    if nmch[0].get() == True and seach[0].get() == True :
        scb("‡∏¢‡∏≥‡∏ß‡∏∏‡πâ‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏Å‡∏∏‡πâ‡∏á",rww,cll)
        tab()
    

    
    if nmch[0].get() == True and meatch[10].get() == True   and meatch[3].get() == True and seach[4].get() == True :
        scb("‡∏¢‡∏≥‡∏ß‡∏∏‡πâ‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏£‡∏ß‡∏°‡∏°‡∏¥‡∏ï‡∏£",rww,cll)
        tab()
    

    
    if meatch[3].get() == True and seach[0].get() == True    and meatch[4].get() == True   :
        scb("‡∏¢‡∏≥‡∏£‡∏ß‡∏°‡∏°‡∏¥‡∏ï‡∏£",rww,cll)
        tab()
    

    
    if nmch[5].get() == True and seach[0].get() == True     :
        scb("‡∏¢‡∏≥‡∏°‡∏≤‡∏°‡πà‡∏≤‡∏Å‡∏∏‡πâ‡∏á‡∏™‡∏î",rww,cll)
        tab()
    

    
    if nmch[5].get() == True and seach[0].get() == True and seach[1].get() == True   :
        scb("‡∏¢‡∏≥‡∏°‡∏≤‡∏°‡πà‡∏≤‡∏£‡∏ß‡∏°‡∏°‡∏¥‡∏ï‡∏£",rww,cll)
        tab()
    

    
    if nmch[5].get() == True and meatch[10].get() == True :
        scb("‡∏¢‡∏≥‡∏°‡∏≤‡∏°‡πà‡∏≤‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö",rww,cll)
        tab()
    

    
    if nmch[1].get() == True and meatch[10].get() == True and vegch2[6].get() == True  :
        scb("‡πÑ‡∏Ç‡πà‡∏ï‡∏∏‡πã‡∏ô‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö‡πÄ‡∏´‡πá‡∏î‡∏´‡∏≠‡∏°",rww,cll)
        tab()
    

    
    if seach[5].get() == True and garch[5].get() == True and vegch2[6].get() == True :
        scb("‡∏õ‡∏•‡∏≤‡∏ó‡∏π‡∏ô‡∏∂‡πà‡∏á‡∏ã‡∏µ‡∏≠‡∏¥‡πä‡∏ß",rww,cll)
        tab()
    

    
    if meatch[4].get() == True  :
        scb("‡πÑ‡∏™‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏≠‡∏î",rww,cll)
        tab()
    
    
    
    if seach[3].get() == True and nmch[1].get() == True and nmch[7].get() == True :
        scb("‡∏õ‡∏•‡∏≤‡∏ä‡∏∏‡∏ö‡πÄ‡∏Å‡∏•‡πá‡∏î‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á‡∏ó‡∏≠‡∏î",rww,cll)
        tab()
    

    
    if nmch[1].get() == True and meatch[8].get() == True  :
        scb("‡∏ó‡∏≠‡∏î‡∏°‡∏±‡∏ô‡∏õ‡∏•‡∏≤‡∏Å‡∏£‡∏≤‡∏¢",rww,cll)
        tab()
    

    
    if seach[0].get() == True  and nmch[7].get() == True  :
        scb("‡∏ó‡∏≠‡∏î‡∏°‡∏±‡∏ô‡∏Å‡∏∏‡πâ‡∏á",rww,cll)
        tab()
    
    
    
    if nmch[1].get() == True  and nmch[7].get() == True  :
        scb("‡∏ô‡∏±‡∏Å‡πÄ‡∏Å‡πá‡∏ï‡πÑ‡∏Å‡πà",rww,cll)
        tab()
    

    
    if meatch[9].get() == True and seach[0].get() == True and nmch[1].get() == True :
        scb("‡∏´‡∏≠‡∏¢‡∏à‡πâ‡∏≠‡∏´‡∏°‡∏π‡∏Å‡∏∏‡πâ‡∏á",rww,cll)
        tab()
    

    
    if meatch[2].get() == True :
        scb("‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡∏´‡∏°‡∏π",rww,cll)
        tab()
    
    
    
    if meatch[6].get() == True  :
        scb("‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡πÑ‡∏Å‡πà",rww,cll)
        tab()
    

    
    if seach[0].get() == True  :
        scb("‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡∏Å‡∏∏‡πâ‡∏á",rww,cll)
        tab()
    

    
    if seach[1].get() == True :
        scb("‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡∏õ‡∏•‡∏≤‡∏´‡∏°‡∏∂‡∏Å",rww,cll)
        tab()
    
    
    
    if  meatch[2].get() == True  :
        scb("‡∏ú‡∏±‡∏î‡∏û‡∏£‡∏¥‡∏Å‡πÅ‡∏Å‡∏á‡∏´‡∏°‡∏π",rww,cll)
        tab()
    

    
    if meatch[6].get() == True :
        scb("‡∏ú‡∏±‡∏î‡∏û‡∏£‡∏¥‡∏Å‡πÅ‡∏Å‡∏á‡πÑ‡∏Å‡πà",rww,cll)
        tab()
    

    
    if seach[0].get() == True   :
        scb("‡∏ú‡∏±‡∏î‡∏û‡∏£‡∏¥‡∏Å‡πÅ‡∏Å‡∏á‡∏Å‡∏∏‡πâ‡∏á",rww,cll)
        tab()
    
    
    
    if seach[1].get() == True   :
        scb("‡∏ú‡∏±‡∏î‡∏û‡∏£‡∏¥‡∏Å‡πÅ‡∏Å‡∏á‡∏õ‡∏•‡∏≤‡∏´‡∏°‡∏∂‡∏Å",rww,cll)
        tab()
    

    
    if meatch[2].get() == True and pepch[2].get() == True :
        scb("‡∏ú‡∏±‡∏î‡∏û‡∏£‡∏¥‡∏Å‡πÄ‡∏ú‡∏≤‡∏´‡∏°‡∏π",rww,cll)
        tab()
    

    
    if meatch[6].get() == True and pepch[2].get() == True :
        scb("‡∏ú‡∏±‡∏î‡∏û‡∏£‡∏¥‡∏Å‡πÄ‡∏ú‡∏≤‡πÑ‡∏Å‡πà",rww,cll)
        tab()
    

    
    if seach[0].get() == True  and pepch[2].get() == True :
        scb("‡∏ú‡∏±‡∏î‡∏û‡∏£‡∏¥‡∏Å‡πÄ‡∏ú‡∏≤‡∏Å‡∏∏‡πâ‡∏á",rww,cll)
        tab()
    

    
    if meatch[2].get() == True  and vegch2[6].get() == True  :
        scb("‡∏ú‡∏±‡∏î‡∏ú‡∏±‡∏Å‡∏£‡∏ß‡∏°‡∏´‡∏°‡∏π",rww,cll)
        tab()  
    

    
    if meatch[6].get() == True  and vegch[9].get() == True :
        scb("‡∏ú‡∏±‡∏î‡∏ú‡∏±‡∏Å‡∏£‡∏ß‡∏°‡πÑ‡∏Å‡πà",rww,cll)
        tab()
    

    
    if seach[0].get() == True and vegch[9].get() == True  :
        scb("‡∏ú‡∏±‡∏î‡∏ú‡∏±‡∏Å‡∏£‡∏ß‡∏°‡∏Å‡∏∏‡πâ‡∏á",rww,cll)
        tab()
    

    
    if vegch2[0].get() == True  :
        scb("‡∏ú‡∏±‡∏î‡∏ú‡∏±‡∏Å‡∏ö‡∏∏‡πâ‡∏á‡πÑ‡∏ü‡πÅ‡∏î‡∏á",rww,cll)
        tab()
    

    
    if vegch[10].get() == True    :
        scb("‡∏ú‡∏±‡∏î‡∏Ñ‡∏∞‡∏ô‡πâ‡∏≤‡∏´‡∏°‡∏π‡∏Å‡∏£‡∏≠‡∏ö",rww,cll)
        tab()
    

    	
    if meatch[2].get() == True and nmch[8].get() == True     :
        scb("‡∏ú‡∏±‡∏î‡πÄ‡∏õ‡∏£‡∏µ‡πâ‡∏¢‡∏ß‡∏´‡∏ß‡∏≤‡∏ô‡∏´‡∏°‡∏π",rww,cll)
        tab()
    

    
    if meatch[10].get() == True   :
        scb("‡∏ú‡∏±‡∏î‡πÄ‡∏ï‡πâ‡∏≤‡∏´‡∏π‡πâ‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö",rww,cll)
        tab()
    

    
    if seach[1].get() == True and seach[0].get() == True  and seach[3].get() == True  :
        scb("‡∏ú‡∏±‡∏î‡∏â‡πà‡∏≤‡∏ó‡∏∞‡πÄ‡∏•",rww,cll)
        tab()
    

   
    if nmch[1].get() == True   :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡πÑ‡∏Ç‡πà‡πÄ‡∏à‡∏µ‡∏¢‡∏ß",rww,cll)
        tab()
    

    
    if nmch[1].get() == True and meatch[1].get() == True  :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡πÑ‡∏Ç‡πà‡πÄ‡∏à‡∏µ‡∏¢‡∏ß‡πÅ‡∏´‡∏ô‡∏°",rww,cll)
        tab()
    

    
    if meatch[10].get() == True and nmch[1].get() == True  :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡πÑ‡∏Ç‡πà‡πÄ‡∏à‡∏µ‡∏¢‡∏ß‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö",rww,cll)
        tab()
    

    
    if meatch[2].get() == True and nmch[1].get() == True   :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏´‡∏°‡∏π",rww,cll)
        tab()
    

    
    if meatch[6].get() == True and nmch[1].get() == True  :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡πÑ‡∏Å‡πà",rww,cll)
        tab()
    

    
    if meatch[4].get() == True and nmch[1].get() == True   :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡πÑ‡∏™‡πâ‡∏Å‡∏£‡∏≠‡∏Å",rww,cll)
        tab()
    

   
    if nmch[1].get() == True  :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡πÅ‡∏Æ‡∏°",rww,cll)
        tab()
    

    
    if meatch[0].get() == True and nmch[1].get() == True   :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏∏‡∏ô‡πÄ‡∏ä‡∏µ‡∏¢‡∏á",rww,cll)
        tab()
    

   
    if seach[0].get() == True and nmch[1].get() == True   :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏∏‡πâ‡∏á",rww,cll)
        tab()
    

    
    if seach[1].get() == True and nmch[1].get() == True   :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏õ‡∏•‡∏≤‡∏´‡∏°‡∏∂‡∏Å",rww,cll)
        tab()
    

    
    if meatch[1].get() == True and nmch[1].get() == True  :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡πÅ‡∏´‡∏ô‡∏°",rww,cll)
        tab()
    

    
    if garch[1].get() == True and meatch[2].get() == True :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏°‡∏π‡∏ó‡∏≠‡∏î‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°",rww,cll)
        tab()
    

    
    if garch[1].get() == True and meatch[6].get() == True :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡πÑ‡∏Å‡πà‡∏ó‡∏≠‡∏î‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°",rww,cll)
        tab()
    

   
    if seach[0].get() == True and garch[1].get() == True  :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏∏‡πâ‡∏á‡∏ó‡∏≠‡∏î‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°",rww,cll)
        tab()
    

   
    if seach[1].get() == True and garch[1].get() == True  :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡∏õ‡∏•‡∏≤‡∏´‡∏°‡∏∂‡∏Å‡∏ó‡∏≠‡∏î‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°",rww,cll)
        tab()
    

    
    if meatch[2].get() == True and  vegch2[12].get() == True  :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏°‡∏π‡∏ú‡∏±‡∏î‡∏û‡∏£‡∏¥‡∏Å‡∏´‡∏¢‡∏ß‡∏Å",rww,cll)
        tab()
    

    
    if meatch[6].get() == True and vegch2[12].get() == True  :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡πÑ‡∏Å‡πà‡∏ú‡∏±‡∏î‡∏û‡∏£‡∏¥‡∏Å‡∏´‡∏¢‡∏ß‡∏Å",rww,cll)
        tab()
    

    
    if seach[0].get() == True and vegch2[12].get() == True :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏∏‡πâ‡∏á‡∏ú‡∏±‡∏î‡∏û‡∏£‡∏¥‡∏Å‡∏´‡∏¢‡∏ß‡∏Å",rww,cll)
        tab()
    
    
    
    if seach[1].get() == True and vegch2[12].get() == True  :
        scb("‡∏Ç‡πâ‡∏≤‡∏ß‡∏õ‡∏•‡∏≤‡∏´‡∏°‡∏∂‡∏Å‡∏ú‡∏±‡∏î‡∏û‡∏£‡∏¥‡∏Å‡∏´‡∏¢‡∏ß‡∏Å",rww,cll)
        tab()
    
    



Button(root,text = "Search",command = search,height = 2,width = 20).grid(row =  1 ,column = 0)


#RESET
def clear() :
    for i in range(len(pep)+len(veg)+len(veg2)+len(meat)+len(gar)+len(gar2)+len(nm)+len(sea)-1):
        cb[i].deselect()

Button(root,text = "Reset",command = clear,height = 2,width = 20).grid(row =  1 ,column = 1)


root.mainloop()